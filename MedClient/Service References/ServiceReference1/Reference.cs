//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34011
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MedClient.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="peoples", Namespace="http://schemas.datacontract.org/2004/07/MedWcfService")]
    [System.SerializableAttribute()]
    public partial class peoples : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> hospitals_idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string passField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<sbyte> sexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string sournameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> age {
            get {
                return this.ageField;
            }
            set {
                if ((this.ageField.Equals(value) != true)) {
                    this.ageField = value;
                    this.RaisePropertyChanged("age");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> hospitals_id {
            get {
                return this.hospitals_idField;
            }
            set {
                if ((this.hospitals_idField.Equals(value) != true)) {
                    this.hospitals_idField = value;
                    this.RaisePropertyChanged("hospitals_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string pass {
            get {
                return this.passField;
            }
            set {
                if ((object.ReferenceEquals(this.passField, value) != true)) {
                    this.passField = value;
                    this.RaisePropertyChanged("pass");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<sbyte> sex {
            get {
                return this.sexField;
            }
            set {
                if ((this.sexField.Equals(value) != true)) {
                    this.sexField = value;
                    this.RaisePropertyChanged("sex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string sourname {
            get {
                return this.sournameField;
            }
            set {
                if ((object.ReferenceEquals(this.sournameField, value) != true)) {
                    this.sournameField = value;
                    this.RaisePropertyChanged("sourname");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="deseases", Namespace="http://schemas.datacontract.org/2004/07/MedWcfService")]
    [System.SerializableAttribute()]
    public partial class deseases : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string aboutField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int iddeseasesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string about {
            get {
                return this.aboutField;
            }
            set {
                if ((object.ReferenceEquals(this.aboutField, value) != true)) {
                    this.aboutField = value;
                    this.RaisePropertyChanged("about");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int iddeseases {
            get {
                return this.iddeseasesField;
            }
            set {
                if ((this.iddeseasesField.Equals(value) != true)) {
                    this.iddeseasesField = value;
                    this.RaisePropertyChanged("iddeseases");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IMedWCF")]
    public interface IMedWCF {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedWCF/Login", ReplyAction="http://tempuri.org/IMedWCF/LoginResponse")]
        string Login([System.ServiceModel.MessageParameterAttribute(Name="login")] string login1, string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedWCF/Login", ReplyAction="http://tempuri.org/IMedWCF/LoginResponse")]
        System.Threading.Tasks.Task<string> LoginAsync(string login, string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedWCF/RegPatien", ReplyAction="http://tempuri.org/IMedWCF/RegPatienResponse")]
        string RegPatien(string userSername, string pass, string name, int hospitalId, sbyte sex, int age, string decease, string state);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedWCF/RegPatien", ReplyAction="http://tempuri.org/IMedWCF/RegPatienResponse")]
        System.Threading.Tasks.Task<string> RegPatienAsync(string userSername, string pass, string name, int hospitalId, sbyte sex, int age, string decease, string state);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedWCF/RegDoctor", ReplyAction="http://tempuri.org/IMedWCF/RegDoctorResponse")]
        string RegDoctor(string userSername, string pass, string name, int hospitalId, sbyte sex, int age, string decease, string state, int positionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedWCF/RegDoctor", ReplyAction="http://tempuri.org/IMedWCF/RegDoctorResponse")]
        System.Threading.Tasks.Task<string> RegDoctorAsync(string userSername, string pass, string name, int hospitalId, sbyte sex, int age, string decease, string state, int positionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedWCF/GetPosition", ReplyAction="http://tempuri.org/IMedWCF/GetPositionResponse")]
        string GetPosition(int positionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedWCF/GetPosition", ReplyAction="http://tempuri.org/IMedWCF/GetPositionResponse")]
        System.Threading.Tasks.Task<string> GetPositionAsync(int positionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedWCF/GetPacientsByHospital", ReplyAction="http://tempuri.org/IMedWCF/GetPacientsByHospitalResponse")]
        string GetPacientsByHospital(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedWCF/GetPacientsByHospital", ReplyAction="http://tempuri.org/IMedWCF/GetPacientsByHospitalResponse")]
        System.Threading.Tasks.Task<string> GetPacientsByHospitalAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedWCF/GetHospitals", ReplyAction="http://tempuri.org/IMedWCF/GetHospitalsResponse")]
        string[] GetHospitals();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedWCF/GetHospitals", ReplyAction="http://tempuri.org/IMedWCF/GetHospitalsResponse")]
        System.Threading.Tasks.Task<string[]> GetHospitalsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedWCF/GetPeopleInfo", ReplyAction="http://tempuri.org/IMedWCF/GetPeopleInfoResponse")]
        MedClient.ServiceReference1.peoples GetPeopleInfo(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedWCF/GetPeopleInfo", ReplyAction="http://tempuri.org/IMedWCF/GetPeopleInfoResponse")]
        System.Threading.Tasks.Task<MedClient.ServiceReference1.peoples> GetPeopleInfoAsync(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedWCF/GetHospitalName", ReplyAction="http://tempuri.org/IMedWCF/GetHospitalNameResponse")]
        string GetHospitalName(int hospitalId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedWCF/GetHospitalName", ReplyAction="http://tempuri.org/IMedWCF/GetHospitalNameResponse")]
        System.Threading.Tasks.Task<string> GetHospitalNameAsync(int hospitalId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedWCF/AddToJournal", ReplyAction="http://tempuri.org/IMedWCF/AddToJournalResponse")]
        string AddToJournal(int doctor_id, int pacient_id, System.DateTime date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedWCF/AddToJournal", ReplyAction="http://tempuri.org/IMedWCF/AddToJournalResponse")]
        System.Threading.Tasks.Task<string> AddToJournalAsync(int doctor_id, int pacient_id, System.DateTime date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedWCF/GetDeseases", ReplyAction="http://tempuri.org/IMedWCF/GetDeseasesResponse")]
        MedClient.ServiceReference1.deseases[] GetDeseases();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedWCF/GetDeseases", ReplyAction="http://tempuri.org/IMedWCF/GetDeseasesResponse")]
        System.Threading.Tasks.Task<MedClient.ServiceReference1.deseases[]> GetDeseasesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedWCF/GetHospitalsListBy", ReplyAction="http://tempuri.org/IMedWCF/GetHospitalsListByResponse")]
        System.Collections.Generic.Dictionary<object, object> GetHospitalsListBy(int desease_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedWCF/GetHospitalsListBy", ReplyAction="http://tempuri.org/IMedWCF/GetHospitalsListByResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<object, object>> GetHospitalsListByAsync(int desease_id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMedWCFChannel : MedClient.ServiceReference1.IMedWCF, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MedWCFClient : System.ServiceModel.ClientBase<MedClient.ServiceReference1.IMedWCF>, MedClient.ServiceReference1.IMedWCF {
        
        public MedWCFClient() {
        }
        
        public MedWCFClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MedWCFClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MedWCFClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MedWCFClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string Login(string login1, string pass) {
            return base.Channel.Login(login1, pass);
        }
        
        public System.Threading.Tasks.Task<string> LoginAsync(string login, string pass) {
            return base.Channel.LoginAsync(login, pass);
        }
        
        public string RegPatien(string userSername, string pass, string name, int hospitalId, sbyte sex, int age, string decease, string state) {
            return base.Channel.RegPatien(userSername, pass, name, hospitalId, sex, age, decease, state);
        }
        
        public System.Threading.Tasks.Task<string> RegPatienAsync(string userSername, string pass, string name, int hospitalId, sbyte sex, int age, string decease, string state) {
            return base.Channel.RegPatienAsync(userSername, pass, name, hospitalId, sex, age, decease, state);
        }
        
        public string RegDoctor(string userSername, string pass, string name, int hospitalId, sbyte sex, int age, string decease, string state, int positionId) {
            return base.Channel.RegDoctor(userSername, pass, name, hospitalId, sex, age, decease, state, positionId);
        }
        
        public System.Threading.Tasks.Task<string> RegDoctorAsync(string userSername, string pass, string name, int hospitalId, sbyte sex, int age, string decease, string state, int positionId) {
            return base.Channel.RegDoctorAsync(userSername, pass, name, hospitalId, sex, age, decease, state, positionId);
        }
        
        public string GetPosition(int positionId) {
            return base.Channel.GetPosition(positionId);
        }
        
        public System.Threading.Tasks.Task<string> GetPositionAsync(int positionId) {
            return base.Channel.GetPositionAsync(positionId);
        }
        
        public string GetPacientsByHospital(string name) {
            return base.Channel.GetPacientsByHospital(name);
        }
        
        public System.Threading.Tasks.Task<string> GetPacientsByHospitalAsync(string name) {
            return base.Channel.GetPacientsByHospitalAsync(name);
        }
        
        public string[] GetHospitals() {
            return base.Channel.GetHospitals();
        }
        
        public System.Threading.Tasks.Task<string[]> GetHospitalsAsync() {
            return base.Channel.GetHospitalsAsync();
        }
        
        public MedClient.ServiceReference1.peoples GetPeopleInfo(string userName) {
            return base.Channel.GetPeopleInfo(userName);
        }
        
        public System.Threading.Tasks.Task<MedClient.ServiceReference1.peoples> GetPeopleInfoAsync(string userName) {
            return base.Channel.GetPeopleInfoAsync(userName);
        }
        
        public string GetHospitalName(int hospitalId) {
            return base.Channel.GetHospitalName(hospitalId);
        }
        
        public System.Threading.Tasks.Task<string> GetHospitalNameAsync(int hospitalId) {
            return base.Channel.GetHospitalNameAsync(hospitalId);
        }
        
        public string AddToJournal(int doctor_id, int pacient_id, System.DateTime date) {
            return base.Channel.AddToJournal(doctor_id, pacient_id, date);
        }
        
        public System.Threading.Tasks.Task<string> AddToJournalAsync(int doctor_id, int pacient_id, System.DateTime date) {
            return base.Channel.AddToJournalAsync(doctor_id, pacient_id, date);
        }
        
        public MedClient.ServiceReference1.deseases[] GetDeseases() {
            return base.Channel.GetDeseases();
        }
        
        public System.Threading.Tasks.Task<MedClient.ServiceReference1.deseases[]> GetDeseasesAsync() {
            return base.Channel.GetDeseasesAsync();
        }
        
        public System.Collections.Generic.Dictionary<object, object> GetHospitalsListBy(int desease_id) {
            return base.Channel.GetHospitalsListBy(desease_id);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<object, object>> GetHospitalsListByAsync(int desease_id) {
            return base.Channel.GetHospitalsListByAsync(desease_id);
        }
    }
}
